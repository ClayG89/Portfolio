{"version":3,"sources":["components/BlogList.js","components/Blog.js","components/CommentList.js","components/Comment.js","components/ContactList.js","components/Contact.js","components/Home.js","components/Projects.js","components/About_me.js","App.js","serviceWorker.js","index.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","BlogList","state","error","blogs","fetchBlogs","a","get","res","setState","data","console","log","message","this","className","href","map","blog","key","id","to","title","src","width","alt","Component","Blog","comments","newComment","fetchBlog","blogId","blogResponse","getCommentList","then","response","foundComment","toggleCreateForm","newShowCreateForm","showCreateForm","updateCommentList","event","props","match","params","updatedNewComment","target","name","value","submitCreateCommentList","preventDefault","post","document","getElementById","reset","innerHTML","height","dangerouslySetInnerHTML","__html","onSubmit","type","placeholder","onChange","onClick","comment","body","CommentList","Comment","ContactList","contactlist","newContact","getContactList","foundContact","updateContactList","updatedNewContactList","submitCreateContactList","setTimeout","alert","window","location","replace","rows","cols","Contact","contact","fetchContact","contactId","contactResponse","componentDidMount","firstname","lastname","company","phone","email","topic","Home","Projects","About_me","App","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"uTAIAA,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,c,IAEXC,E,4MACjBC,MAAQ,CACJC,MAAO,GACPC,MAAO,I,EAMXC,W,sBAAa,4BAAAC,EAAA,+EAEaT,IAAMU,IAAI,kBAFvB,OAECC,EAFD,OAGL,EAAKC,SAAS,CAAEL,MAAOI,EAAIE,OAHtB,gDAMLC,QAAQC,IAAR,MACA,EAAKH,SAAS,CAAEN,MAAO,KAAIU,UAPtB,yD,kEAHTC,KAAKT,e,+BAcL,OAAIS,KAAKZ,MAAMC,MACJ,6BAAMW,KAAKZ,MAAMC,OAGxB,yBAAKY,UAAU,mBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,YACX,mCAEJ,yBAAKA,UAAU,UACX,yCAEJ,yBAAKA,UAAU,UACX,uCAGR,yBAAKA,UAAU,eACX,6BAAK,6BAAK,uBAAGC,KAAK,aAAR,cACV,6BAAK,6BAAK,uBAAGA,KAAK,KAAR,UACV,6BAAK,6BAAK,uBAAGA,KAAK,YAAR,gBACV,6BAAK,6BAAK,uBAAGA,KAAK,aAAR,eAEd,yBAAKD,UAAU,gBACX,yBAAKA,UAAU,gBACX,qCACCD,KAAKZ,MAAME,MAAMa,KAAI,SAAAC,GAAI,OACtB,yBAAKC,IAAKD,EAAKE,IACX,kBAAC,IAAD,CAAMC,GAAE,gBAAWH,EAAKE,KAAQF,EAAKI,YAIjD,yBAAKP,UAAU,YACX,+CAEJ,yBAAKA,UAAU,YACX,oDAEJ,yBAAKA,UAAU,YACX,yDAEJ,yBAAKA,UAAU,YACX,iEAGR,yBAAKA,UAAU,SACX,6BAAK,8EACL,6BAAK,uGACL,6BAAK,uDACD,yBAAKA,UAAU,gBACX,yBAAKQ,IAAI,qBAAqBC,MAAM,OAAOC,IAAI,MAEnD,yBAAKV,UAAU,gBACX,yBAAKQ,IAAI,qBAAqBC,MAAM,OAAOC,IAAI,MAEnD,yBAAKV,UAAU,iBACX,yBAAKQ,IAAI,sBAAsBC,MAAM,OAAOC,IAAI,MAEpD,yBAAKV,UAAU,eACX,yBAAKQ,IAAI,oBAAoBC,MAAM,OAAOC,IAAI,Y,GA9EpCC,a,QCGtC7B,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,c,IAIX2B,E,4MAEjBzB,MAAQ,CACJgB,KAAM,GACNU,SAAU,GACVC,WAAY,I,EAUhBC,U,uCAAY,WAAOC,GAAP,eAAAzB,EAAA,+EAEuBT,IAAMU,IAAN,wBAA2BwB,EAA3B,MAFvB,OAEEC,EAFF,OAGJ,EAAKvB,SAAS,CACVS,KAAMc,EAAatB,KACnBkB,SAAUI,EAAatB,KAAKkB,WAL5B,gDASJjB,QAAQC,IAAR,MACA,EAAKH,SAAS,CAAEN,MAAO,KAAMU,UAVzB,yD,wDAcZoB,eAAiB,WACbpC,IAAMU,IAAI,qBAAqB2B,MAAK,SAACC,GACjC,IAAMC,EAAeD,EAASzB,KAC9B,EAAKD,SAAS,CACVmB,SAAUQ,Q,EAItBC,iBAAmB,WACf,IAAMC,GAAqB,EAAKpC,MAAMqC,eACtC,EAAK9B,SAAS,CACV8B,eAAgBD,K,EAIxBE,kBAAoB,SAACC,GACjB,IAAMvB,EAAO,EAAKwB,MAAMC,MAAMC,OAAOxB,GAC/ByB,EAAiB,2BAAQ,EAAK3C,MAAM2B,YAAnB,IAA+BX,SACtD2B,EAAkBJ,EAAMK,OAAOC,MAAQN,EAAMK,OAAOE,MACpD,EAAKvC,SAAS,CACVoB,WAAYgB,K,EAGpBI,wBAA0B,SAACR,GAEvBA,EAAMS,iBACNrD,IAAMsD,KAAK,oBAAqB,EAAKjD,MAAM2B,YAAYK,MAAK,WACxD,EAAKG,mBACL,EAAKJ,iBACLmB,SAASC,eAAe,UAAUC,QAClCF,SAASC,eAAe,UAAUE,UAN5B,O,kEA3CV,IAAMxB,EAASjB,KAAK4B,MAAMC,MAAMC,OAAOxB,GACvCN,KAAKgB,UAAUC,GACfjB,KAAKmB,mB,+BAwDL,OACI,yBAAKlB,UAAU,eAEX,yBAAKA,UAAU,cAEX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,YACX,mCAEJ,yBAAKA,UAAU,UACX,yCAEJ,yBAAKA,UAAU,UACX,uCAGR,yBAAKA,UAAU,WACX,6BAAK,6BAAK,uBAAGC,KAAK,aAAR,cACV,6BAAK,6BAAK,uBAAGA,KAAK,KAAR,UACV,6BAAK,6BAAK,uBAAGA,KAAK,YAAR,gBACV,6BAAK,6BAAK,uBAAGA,KAAK,aAAR,gBAGlB,yBAAKD,UAAU,YACX,yBAAKA,UAAU,UACX,yBAAKQ,IAAI,mBAAmBC,MAAM,MAAMC,IAAI,UAEhD,yBAAKV,UAAU,QACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,QACX,uBAAGC,KAAK,SACJ,yBAAKO,IAAI,oBAAoBC,MAAM,KAAKgC,OAAO,KAAK/B,IAAI,UAE5D,yBAAKV,UAAU,aACX,4BAAKD,KAAKZ,MAAMgB,KAAKI,UAIjC,yBAAKF,GAAG,WAAWL,UAAU,YACzB,yBAAK0C,wBAAyB,CAAEC,OAAQ5C,KAAKZ,MAAMgB,KAAKiC,UAGhE,yBAAKpC,UAAU,eACX,0BAAMK,GAAG,SAASuC,SAAU7C,KAAK0B,mBAC7B,kCACI,gDACA,yBAAKzB,UAAU,aACX,2BACI6C,KAAK,OACLb,KAAK,OACLc,YAAY,YACZC,SAAUhD,KAAK0B,qBAEvB,yBAAKzB,UAAU,YACX,8BACIA,UAAU,WACVgC,KAAK,OACLc,YAAY,gBACZC,SAAUhD,KAAK0B,qBAEvB,4BAAQuB,QAASjD,KAAKmC,yBAAtB,YAGR,yBAAKlC,UAAU,mBACX,wCACCD,KAAKZ,MAAM0B,SAASX,KAAI,SAAA+C,GAAO,OAC5B,yBAAK7C,IAAK6C,EAAQ5C,IACd,4BAAK4C,EAAQjB,MACb,2BAAIiB,EAAQC,YAK5B,yBAAKlD,UAAU,UACX,6BAAK,8EACL,6BAAK,uGACL,yBAAKA,UAAU,gBACX,yBAAKQ,IAAI,qBAAqBC,MAAM,OAAOC,IAAI,MAEnD,yBAAKV,UAAU,gBACX,yBAAKQ,IAAI,qBAAqBC,MAAM,OAAOC,IAAI,MAEnD,yBAAKV,UAAU,iBACX,yBAAKQ,IAAI,sBAAsBC,MAAM,OAAOC,IAAI,MAEpD,yBAAKV,UAAU,eACX,yBAAKQ,IAAI,oBAAoBC,MAAM,OAAOC,IAAI,a,GA1JxCC,aCbbwC,E,uKAEb,OACI,kC,GAH6BxC,aCApByC,E,uKAEb,OACI,kC,GAHyBzC,aCGrC7B,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,c,IAGXoE,E,4MACjBlE,MAAQ,CACJC,MAAO,GACPkE,YAAa,GACbC,WAAY,I,EAEhBC,eAAiB,WACb1E,IAAMU,IAAI,qBAAqB2B,MAAK,SAACC,GACjC,IAAMqC,EAAerC,EAASzB,KAC9B,EAAKD,SAAS,CACV4D,YAAaG,Q,EAIzBnC,iBAAmB,WACf,IAAMC,GAAqB,EAAKpC,MAAMqC,eACtC,EAAK9B,SAAS,CACV8B,eAAgBD,K,EAGxBmC,kBAAoB,SAAChC,GACjB,IAAMiC,EAAqB,eAAQ,EAAKxE,MAAMoE,YAC9CI,EAAsBjC,EAAMK,OAAOC,MAAQN,EAAMK,OAAOE,MACxD,EAAKvC,SAAS,CACV6D,WAAYI,K,EAGpBC,wBAA0B,SAAClC,GAEvBA,EAAMS,iBACNrD,IAAMsD,KAAK,oBAAqB,EAAKjD,MAAMoE,YAAYpC,MAAK,WACxD,EAAKG,mBACL,EAAKkC,iBAELK,WAAWC,MAAM,0BAA2BC,OAAOC,SAASC,QAAQ,SAIxErE,QAAQC,IAAI,EAAKV,MAAMoE,a,kEAGvBxD,KAAKyD,mB,+BAGL,OACI,yBAAKxD,UAAU,kBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,YACX,mCAEJ,yBAAKA,UAAU,UACX,yCAEJ,yBAAKA,UAAU,UACX,uCAGR,yBAAKA,UAAU,cACX,6BAAK,6BAAK,uBAAGC,KAAK,UAAR,cACV,6BAAK,6BAAK,uBAAGA,KAAK,KAAR,UACV,6BAAK,6BAAK,uBAAGA,KAAK,SAAR,UACV,6BAAK,6BAAK,uBAAGA,KAAK,aAAR,eAEd,yBAAKD,UAAU,gBACX,2CAGJ,0BAAOK,GAAG,UAAUuC,SAAU7C,KAAK2D,mBAC3B,yBAAK1D,UAAU,iBACnB,yBAAKA,UAAU,gBACP,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,aACX,2BAAO6C,KAAK,OAAO7C,UAAU,iBAAiBgC,KAAK,YAAYc,YAAY,aAAaC,SAAUhD,KAAK2D,qBAE3G,yBAAK1D,UAAU,YACX,2BAAO6C,KAAK,OAAO7C,UAAU,gBAAgBgC,KAAK,WAAWc,YAAY,YAAYC,SAAUhD,KAAK2D,qBAExG,yBAAK1D,UAAU,WACX,2BAAO6C,KAAK,OAAO7C,UAAU,eAAegC,KAAK,QAAQc,YAAY,UAAUC,SAAUhD,KAAK2D,sBAGlG,yBAAK1D,UAAU,kBACf,yBAAKA,UAAU,WACX,2BAAO6C,KAAK,OAAO7C,UAAU,eAAegC,KAAK,UAAUc,YAAY,UAAUC,SAAUhD,KAAK2D,qBAEpG,yBAAK1D,UAAU,SACX,2BAAO6C,KAAK,QAAQ7C,UAAU,aAAagC,KAAK,QAAQc,YAAY,QAAQC,SAAUhD,KAAK2D,qBAE/F,yBAAK1D,UAAU,SACX,2BAAO6C,KAAK,MAAM7C,UAAU,aAAagC,KAAK,QAAQc,YAAY,QAAQC,SAAUhD,KAAK2D,oBACzF,uBAAG1D,UAAU,WAAb,+BAMR,yBAAKA,UAAU,YAAYkE,KAAK,KAAKC,KAAK,MACtC,8BAAUnE,UAAU,WAAWgC,KAAK,UAAUc,YAAY,gBAAgBC,SAAUhD,KAAK2D,oBAC7F,yBAAK1D,UAAU,iBACX,4BAAQgD,QAASjD,KAAK6D,yBAAtB,aAIZ,yBAAK5D,UAAU,SACX,6BAAK,8EACL,6BAAK,uGACL,6BAAK,uDACL,yBAAKA,UAAU,gBACX,yBAAKQ,IAAI,qBAAqBC,MAAM,OAAOC,IAAI,MAEnD,yBAAKV,UAAU,gBACX,yBAAKQ,IAAI,qBAAqBC,MAAM,OAAOC,IAAI,MAEnD,yBAAKV,UAAU,iBACX,yBAAKQ,IAAI,sBAAsBC,MAAM,OAAOC,IAAI,MAEpD,yBAAKV,UAAU,eACX,yBAAKQ,IAAI,oBAAoBC,MAAM,OAAOC,IAAI,Y,GArH7BC,aCNzC7B,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,c,IAEXmF,E,4MACjBjF,MAAQ,CACJkF,QAAS,GACTf,YAAa,I,EAOjBgB,a,uCAAe,WAAOC,GAAP,eAAAhF,EAAA,+EAEuBT,IAAMU,IAAN,2BAA8B+E,EAA9B,kBAFvB,OAEDC,EAFC,OAGP,EAAK9E,SAAS,CACV2E,QAASG,EAAgB7E,OAJtB,gDAQPC,QAAQC,IAAR,MACA,EAAKH,SAAS,CAACN,MAAO,KAAMU,UATrB,QAWXF,QAAQC,IAAI,EAAK4E,mBAXN,yD,wHAJX,IAAMF,EAAYxE,KAAK4B,MAAMC,MAAMC,OAAOxB,GAC1CN,KAAKuE,aAAaC,K,+BAiBlB,OACI,6BACI,iCAIA,8CACA,4CAAmBxE,KAAKZ,MAAMkF,QAAQK,WACtC,2CAAiB3E,KAAKZ,MAAMkF,QAAQM,UACpC,yCAAe5E,KAAKZ,MAAMkF,QAAQO,SAClC,uCAAa7E,KAAKZ,MAAMkF,QAAQQ,OAChC,sCAAY9E,KAAKZ,MAAMkF,QAAQS,OAC/B,gDAAsB/E,KAAKZ,MAAMkF,QAAQU,OACzC,yCAAehF,KAAKZ,MAAMkF,QAAQvE,c,GArCba,aCJhBqE,E,uKAEb,OACI,yBAAKhF,UAAU,eACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,YACX,mCAEJ,yBAAKA,UAAU,UACX,yCAEJ,yBAAKA,UAAU,UACX,uCAIR,yBAAKA,UAAU,WACX,6BAAK,6BAAK,uBAAGC,KAAK,aAAR,cACV,6BAAK,6BAAK,uBAAGA,KAAK,SAAR,UACV,6BAAK,6BAAK,uBAAGA,KAAK,YAAR,gBACV,6BAAK,6BAAK,uBAAGA,KAAK,aAAR,eAEd,yBAAKD,UAAU,mBACX,yBAAKA,UAAU,UACX,oLAIA,8DAIR,yBAAKA,UAAU,SACX,6BAAK,8EACL,6BAAK,uGACL,6BAAK,uDACL,yBAAKA,UAAU,gBACX,yBAAKQ,IAAI,qBAAqBC,MAAM,OAAOC,IAAI,MAEnD,yBAAKV,UAAU,gBACX,yBAAKQ,IAAI,qBAAqBC,MAAM,OAAOC,IAAI,MAEnD,yBAAKV,UAAU,iBACX,yBAAKQ,IAAI,sBAAsBC,MAAM,OAAOC,IAAI,MAEpD,yBAAKV,UAAU,eACX,yBAAKQ,IAAI,oBAAoBC,MAAM,OAAOC,IAAI,Y,GA9CpCC,aCAbsE,E,uKAEb,OACI,yBAAKjF,UAAU,kBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,YACX,mCAEJ,yBAAKA,UAAU,UACX,yCAEJ,yBAAKA,UAAU,UACX,uCAGR,yBAAKA,UAAU,WACX,6BAAK,6BAAK,uBAAGC,KAAK,KAAR,UACV,6BAAK,6BAAK,uBAAGA,KAAK,aAAR,cACV,6BAAK,6BAAK,uBAAGA,KAAK,SAAR,UACV,6BAAK,6BAAK,uBAAGA,KAAK,YAAR,iBAEd,yBAAKD,UAAU,gBACX,yCAEJ,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,iBACX,yBAAKQ,IAAI,sBAAsBE,IAAI,MAAMD,MAAM,MAAMgC,OAAO,SAEhE,yBAAKzC,UAAU,iBACX,yBAAKQ,IAAI,yBAAyBE,IAAI,MAAMD,MAAM,MAAMgC,OAAO,SAEnE,yBAAKzC,UAAU,iBACX,yBAAKQ,IAAI,cAAcE,IAAI,MAAMD,MAAM,MAAMgC,OAAO,SAExD,yBAAKzC,UAAU,iBACX,uBAAGC,KAAK,oCACJ,yBAAKO,IAAI,2BAA2BE,IAAI,MAAMD,MAAM,MAAMgC,OAAO,WAI7E,yBAAKzC,UAAU,SACX,6BAAK,8EACL,6BAAK,uGACL,yBAAKA,UAAU,gBACX,yBAAKQ,IAAI,qBAAqBC,MAAM,OAAOC,IAAI,MAEnD,yBAAKV,UAAU,gBACX,yBAAKQ,IAAI,qBAAqBC,MAAM,OAAOC,IAAI,MAEnD,yBAAKV,UAAU,iBACX,yBAAKQ,IAAI,sBAAsBC,MAAM,OAAOC,IAAI,MAEpD,yBAAKV,UAAU,eACX,yBAAKQ,IAAI,oBAAoBC,MAAM,OAAOC,IAAI,Y,GArDhCC,aCAjBuE,E,uKAEb,OACI,yBAAKlF,UAAU,gBACV,yBAAKA,UAAU,eACZ,yBAAKA,UAAU,YACX,mCAEJ,yBAAKA,UAAU,UACX,yCAEJ,yBAAKA,UAAU,UACX,uCAGR,yBAAKA,UAAU,YACP,6BAAK,6BAAK,uBAAGC,KAAK,KAAR,UACV,6BAAK,6BAAK,uBAAGA,KAAK,SAAR,UACV,6BAAK,6BAAK,uBAAGA,KAAK,YAAR,gBACV,6BAAK,6BAAK,uBAAGA,KAAK,aAAR,oB,GAnBIU,aCkDvBwE,G,6KAnCT,OACI,kBAAC,IAAD,KACI,yBAAKnF,UAAU,OAEX,8BAIA,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,IAAIC,UAAYN,IAElC,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,QAAQC,UAAYpG,IAEtC,kBAAC,IAAD,CAAOmG,KAAK,YAAYC,UAAY1E,IAEpC,kBAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,WAAWC,UAAYjC,IAEzC,kBAAC,IAAD,CAAOgC,KAAK,eAAeC,UAAYlB,IAEvC,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,WAAWC,UAAYnC,IAEzC,kBAAC,IAAD,CAAOkC,KAAK,eAAeC,UAAYlC,IAEvC,kBAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,YAAYC,UAAYL,IAE1C,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,YAAYC,UAAYJ,W,GA5B5CvE,cCHE4E,QACW,cAA7BxB,OAAOC,SAASwB,UAEe,UAA7BzB,OAAOC,SAASwB,UAEhBzB,OAAOC,SAASwB,SAAS5D,MACvB,2DCZN6D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFtD,SAASC,eAAe,SDyHpB,kBAAmBsD,WACrBA,UAAUC,cAAcC,MACrB3E,MAAK,SAAA4E,GACJA,EAAaC,gBAEdC,OAAM,SAAA7G,GACLQ,QAAQR,MAAMA,EAAMU,c","file":"static/js/main.9b96b546.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport default class BlogList extends Component {\n    state = {\n        error: '',\n        blogs: []\n    }\n    componentDidMount() {\n        this.fetchBlogs();\n    }\n\n    fetchBlogs = async () => {\n        try {\n            const res = await axios.get('/api/v1/blogs/');\n            this.setState({ blogs: res.data });\n        }\n        catch (err) {\n            console.log(err)\n            this.setState({ error: err.message })\n        }\n    }\n    render() {\n        if (this.state.error) {\n            return <div>{this.state.error}</div>\n        }\n        return (\n            <div className=\"blogListWrapper\">\n                <div className=\"logowrapper\">\n                    <div className=\"logoinit\">\n                        <h1>CG</h1>\n                    </div>\n                    <div className=\"logofn\">\n                        <h4>Clayborn</h4>\n                    </div>\n                    <div className=\"logoln\">\n                        <h4>Guess</h4>\n                    </div>\n                </div>\n                <div className=\"blogListNav\">\n                    <nav><div><a href=\"/About_me\">About Me</a></div></nav>\n                    <nav><div><a href=\"/\">Home</a></div></nav>\n                    <nav><div><a href=\"/Contact\">Contact Me</a></div></nav>\n                    <nav><div><a href=\"/Projects\">Projects</a></div></nav>\n                </div>\n                <div className=\"blogListMain\">\n                    <div className=\"blogListLink\">\n                        <h1>Blogs</h1>\n                        {this.state.blogs.map(blog => (\n                            <div key={blog.id}>\n                                <Link to={`/blog/${blog.id}`} >{blog.title}</Link>\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"excerpt1\">\n                        <p>\"Gobbledygook!\"</p>\n                    </div>\n                    <div className=\"excerpt2\">\n                        <p>\"More Gobbledygook!\"</p>\n                    </div>\n                    <div className=\"excerpt3\">\n                        <p>\"Even more Gobbledygook!\"</p>\n                    </div>\n                    <div className=\"excerpt4\">\n                        <p>\"Ok, this is geting ridiculous.\"</p>\n                    </div>\n                </div>\n                <div className=\"icons\">\n                    <div><p>© Background image courtesy of Travis Clark</p></div>\n                    <div><p>Site created by Clayborn Guess using React, Django REST and PostgreSQL.</p></div>\n                    <div><p>claybornguess@yahoo.com</p></div>\n                        <div className=\"facebookIcon\">\n                            <img src=\"/facebook-icon.png\" width=\"35px\" alt=\"\"></img>\n                        </div>\n                        <div className=\"linkedinIcon\">\n                            <img src=\"/linkedin-icon.jpg\" width=\"35px\" alt=\"\"></img>\n                        </div>\n                        <div className=\"instagramIcon\">\n                            <img src=\"/instagram-icon.png\" width=\"35px\" alt=\"\"></img>\n                        </div>\n                        <div className=\"twitterIcon\">\n                            <img src=\"/twitter-icon.png\" width=\"35px\" alt=\"\"></img>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\n// import { renderToStaticMarkup } from 'react-dom/server'\n// import parse, { domToReact } from 'html-react-parser'\n// import { Link, RichText, Date } from 'prismic-reactjs';\n\n\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n\n\nexport default class Blog extends Component {\n\n    state = {\n        blog: [],\n        comments: [],\n        newComment: {\n        },\n    }\n\n    componentDidMount() {\n        const blogId = this.props.match.params.id;\n        this.fetchBlog(blogId)\n        this.getCommentList()\n    }\n\n    fetchBlog = async (blogId) => {\n        try {\n            const blogResponse = await axios.get(`/api/v1/blogs/${blogId}/`)\n            this.setState({\n                blog: blogResponse.data,\n                comments: blogResponse.data.comments,\n            })\n        }\n        catch (error) {\n            console.log(error)\n            this.setState({ error: error.message })\n        }\n    }\n\n    getCommentList = () => {\n        axios.get('/api/v1/comments/').then((response) => {\n            const foundComment = response.data;\n            this.setState({\n                comments: foundComment\n            })\n        })\n    }\n    toggleCreateForm = () => {\n        const newShowCreateForm = !this.state.showCreateForm;\n        this.setState({\n            showCreateForm: newShowCreateForm,\n        });\n    }\n\n    updateCommentList = (event) => {\n        const blog = this.props.match.params.id;\n        const updatedNewComment = { ...this.state.newComment, blog };\n        updatedNewComment[event.target.name] = event.target.value;\n        this.setState({\n            newComment: updatedNewComment,\n        });\n    }\n    submitCreateCommentList = (event) => {\n        let txt = \"\";\n        event.preventDefault();\n        axios.post('/api/v1/comments/', this.state.newComment).then(() => {\n            this.toggleCreateForm();\n            this.getCommentList();\n            document.getElementById(\"myForm\").reset();\n            document.getElementById(\"myForm\").innerHTML = txt;\n            // window.location.replace('/blog');\n            \n        });\n    }\n    \n   \n    render() {\n\n        return (\n            <div className=\"blogWrapper\">\n\n                <div className=\"blogheader\">\n\n                    <div className=\"logowrapper\">\n                        <div className=\"logoinit\">\n                            <h1>CG</h1>\n                        </div>\n                        <div className=\"logofn\">\n                            <h4>Clayborn</h4>\n                        </div>\n                        <div className=\"logoln\">\n                            <h4>Guess</h4>\n                        </div>\n                    </div>\n                    <div className=\"blogNav\">\n                        <nav><div><a href=\"/About_me\">About Me</a></div></nav>\n                        <nav><div><a href=\"/\">Home</a></div></nav>\n                        <nav><div><a href=\"/Contact\">Contact Me</a></div></nav>\n                        <nav><div><a href=\"/Projects\">Projects</a></div></nav>\n                    </div>\n                </div>\n                <div className=\"blogMain\">\n                    <div className=\"image1\">\n                        <img src=\"/testphoto1.jpeg\" width=\"350\" alt=\"self\"></img>\n                    </div>\n                    <div className=\"blog\">\n                        <div className=\"align\">\n                            <div className=\"back\">\n                                <a href=\"/Blog\">\n                                    <img src=\"/backbutton5.jpeg\" width=\"55\" height=\"45\" alt=\"back\"></img>\n                                </a>\n                                <div className=\"blogTitle\">\n                                    <h2>{this.state.blog.title}</h2>\n                                </div>\n                            </div>\n                        </div>\n                        <div id=\"blogpost\" className=\"blogPost\">\n                            <div dangerouslySetInnerHTML={{ __html: this.state.blog.post }} />\n                        </div>\n                    </div>\n                    <div className=\"formWrapper\">\n                        <form id=\"myForm\" onSubmit={this.updateCommentList}>\n                            <fieldset>\n                                <legend>Comment Here</legend>\n                                <div className=\"nameInput\">\n                                    <input\n                                        type=\"text\"\n                                        name=\"name\"\n                                        placeholder=\"Your name\"\n                                        onChange={this.updateCommentList} />\n                                </div>\n                                <div className=\"textArea\">\n                                    <textarea\n                                        className=\"textarea\"\n                                        name=\"body\"\n                                        placeholder=\"Add a comment\"\n                                        onChange={this.updateCommentList}></textarea>\n                                </div>\n                                <button onClick={this.submitCreateCommentList}>Submit</button>\n                            </fieldset>\n                        </form>\n                        <div className=\"enteredComments\">\n                            <h2>Comments</h2>\n                            {this.state.comments.map(comment => (\n                                <div key={comment.id}>\n                                    <h4>{comment.name}</h4>\n                                    <p>{comment.body}</p>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <div className=\"icons2\">\n                        <div><p>© Background image courtesy of Travis Clark</p></div>\n                        <div><p>Site created by Clayborn Guess using React, Django REST and PostgreSQL.</p></div>\n                        <div className=\"facebookIcon\">\n                            <img src=\"/facebook-icon.png\" width=\"35px\" alt=\"\"></img>\n                        </div>\n                        <div className=\"linkedinIcon\">\n                            <img src=\"/linkedin-icon.jpg\" width=\"35px\" alt=\"\"></img>\n                        </div>\n                        <div className=\"instagramIcon\">\n                            <img src=\"/instagram-icon.png\" width=\"35px\" alt=\"\"></img>\n                        </div>\n                        <div className=\"twitterIcon\">\n                            <img src=\"/twitter-icon.png\" width=\"35px\" alt=\"\"></img>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react'\n\nexport default class CommentList extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n\n// import React, { Component } from 'react'\n// import axios from 'axios'\n// // import Comment from './Comment'\n// // import { Link } from 'react-router-dom'\n\n// axios.defaults.xsrfCookieName = 'csrftoken'\n// axios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n// export default class CommentList extends Component {\n//     state = {\n//         error: '',\n//         blog: [],\n//         comments: [],\n//         newComment: {}\n\n//     }\n//     getCommentList = () => {\n//         axios.get('/api/v1/comments/').then((response) => {\n//             const foundComment = response.data;\n//             this.setState({\n//                 comments: foundComment\n//             })\n//         })\n//     }\n//     toggleCreateForm = () => {\n//         const newShowCreateForm = !this.state.showCreateForm;\n//         this.setState({\n//             showCreateForm: newShowCreateForm,\n//         });\n//     }\n//     updateCommentList = (event) => {\n//         const updatedNewComment = { ...this.state.newComment };\n//         updatedNewComment[event.target.name] = event.target.value;\n//         this.setState({\n//             newComment: updatedNewComment,\n//         });\n//     }\n//     submitCreateCommentList = (event) => {\n//         event.preventDefault();\n//         axios.post('/api/v1/comments/', this.state.newComment).then(() => {\n//             this.toggleCreateForm();\n//             this.getCommentList();\n//         });\n//     }\n//     componentDidMount() {\n//         this.getCommentList()\n        \n//     }\n \n\n//         render() {\n//             return (\n//                 <div>\n                      \n//                 </div>\n//             )\n//         }\n//     }\n\n","import React, { Component } from 'react'\n\nexport default class Comment extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n\n\n// import React, { Component } from 'react'\n// // import { Link } from 'react-router-dom'\n// import axios from 'axios'\n\n// axios.defaults.xsrfCookieName = 'csrftoken'\n// axios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n// export default class Comment extends Component {\n//         state = {\n//             blog: [],\n//             comment: {},\n//             comments: [],  \n//         }\n\n        \n//         componentDidMount() {\n//             const commentId = this.props.match.params.id;\n//             this.fetchComment(commentId)\n//         }\n        \n//         fetchComment = async (commentId) => {\n//             try {\n//                 const commentResponse = await axios.get(`/api/v1/comments/${commentId}/?format=json`)\n//                 this.setState({\n//                     comment: commentResponse.data,\n//                     blog: commentResponse.blogs,\n//                 })\n//             }\n//             catch (error) {\n//                 console.log(error)\n//                 this.setState({error: error.message})\n//             }\n            \n//         }\n      \n        \n//     render() {\n//         return (\n//             <div>\n//                 <h3>{this.state.comment.name}</h3>\n//                 <p>{this.state.comment.body}</p>\n//             </div>\n//         )\n//     }\n// }","import React, { Component } from 'react'\nimport axios from 'axios'\n// import { Link } from 'react-router-dom'\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n\nexport default class ContactList extends Component {\n    state = {\n        error: '',\n        contactlist: [],\n        newContact: {}\n    }\n    getContactList = () => {\n        axios.get('/api/v1/contacts/').then((response) => {\n            const foundContact = response.data;\n            this.setState({\n                contactlist: foundContact\n            })\n        })\n    }\n    toggleCreateForm = () => {\n        const newShowCreateForm = !this.state.showCreateForm;\n        this.setState({\n            showCreateForm: newShowCreateForm,\n        });\n    }\n    updateContactList = (event) => {\n        const updatedNewContactList = { ...this.state.newContact };\n        updatedNewContactList[event.target.name] = event.target.value;\n        this.setState({\n            newContact: updatedNewContactList,\n        });\n    }\n    submitCreateContactList = (event) => {\n        // let txt = \"\";\n        event.preventDefault();\n        axios.post('/api/v1/contacts/', this.state.newContact).then(() => {\n            this.toggleCreateForm();\n            this.getContactList();\n            // document.getElementById(\"myForm2\").reset();\n            setTimeout(alert('Submitted successfully'), window.location.replace('/'));\n            // window.location.replace('/');\n            // document.getElementById(\"myForm2\").innerHTML = txt;         \n        });\n        console.log(this.state.newContact)\n    }\n    componentDidMount() {\n        this.getContactList()\n    }\n    render() {\n        return (\n            <div className=\"contactWrapper\">\n                <div className=\"logowrapper\">\n                    <div className=\"logoinit\">\n                        <h1>CG</h1>\n                    </div>\n                    <div className=\"logofn\">\n                        <h4>Clayborn</h4>\n                    </div>\n                    <div className=\"logoln\">\n                        <h4>Guess</h4>\n                    </div>\n                </div>\n                <div className=\"contactNav\">\n                    <nav><div><a href=\"/About\">About Me</a></div></nav>\n                    <nav><div><a href=\"/\">Home</a></div></nav>\n                    <nav><div><a href=\"/Blog\">Blog</a></div></nav>\n                    <nav><div><a href=\"/Projects\">Projects</a></div></nav>\n                </div>\n                <div className=\"contactTitle\">\n                    <h2>Contact Me</h2>\n                </div>\n\n                <form  id=\"myForm2\" onSubmit={this.updateContactList}>\n                        <div className=\"columnWrapper\">\n                    <div className=\"formWrapper2\">\n                            <div className=\"columnWrapper1\">\n                            <div className=\"firstName\">\n                                <input type=\"text\" className=\"firstNameField\" name=\"firstname\" placeholder=\"First Name\" onChange={this.updateContactList} />\n                            </div>\n                            <div className=\"lastName\">\n                                <input type=\"text\" className=\"lastNameField\" name=\"lastname\" placeholder=\"Last Name\" onChange={this.updateContactList} />\n                            </div>\n                            <div className=\"subject\">\n                                <input type=\"text\" className=\"subjectField\" name=\"topic\" placeholder=\"Subject\" onChange={this.updateContactList} />\n                            </div>\n                            </div>\n                            <div className=\"columnWrapper2\">\n                            <div className=\"company\">\n                                <input type=\"text\" className=\"companyField\" name=\"company\" placeholder=\"Company\" onChange={this.updateContactList} />\n                            </div>\n                            <div className=\"email\">\n                                <input type=\"email\" className=\"emailField\" name=\"email\" placeholder=\"Email\" onChange={this.updateContactList} />\n                            </div>\n                            <div className=\"phone\">\n                                <input type=\"tel\" className=\"phoneField\" name=\"phone\" placeholder=\"Phone\" onChange={this.updateContactList} />\n                                <p className=\"warning\">Insert +1 before number</p>\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n\n                        <div className=\"textArea2\" rows=\"10\" cols=\"50\">\n                            <textarea className=\"textarea\" name=\"message\" placeholder=\"Add a comment\" onChange={this.updateContactList}></textarea>\n                        <div className=\"contactButton\">\n                            <button onClick={this.submitCreateContactList}>Submit</button>\n                        </div>\n                    </div>\n                </form>\n                <div className=\"icons\">\n                    <div><p>© Background image courtesy of Travis Clark</p></div>\n                    <div><p>Site created by Clayborn Guess using React, Django REST and PostgreSQL.</p></div>\n                    <div><p>claybornguess@yahoo.com</p></div>\n                    <div className=\"facebookIcon\">\n                        <img src=\"/facebook-icon.png\" width=\"35px\" alt=\"\"></img>\n                    </div>\n                    <div className=\"linkedinIcon\">\n                        <img src=\"/linkedin-icon.jpg\" width=\"35px\" alt=\"\"></img>\n                    </div>\n                    <div className=\"instagramIcon\">\n                        <img src=\"/instagram-icon.png\" width=\"35px\" alt=\"\"></img>\n                    </div>\n                    <div className=\"twitterIcon\">\n                        <img src=\"/twitter-icon.png\" width=\"35px\" alt=\"\"></img>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport axios from 'axios'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport default class Contact extends Component {\n    state = {\n        contact: {},\n        contactlist: [],\n    }\n    componentDidMount() {\n        const contactId = this.props.match.params.id;\n        this.fetchContact(contactId)\n    }\n\n    fetchContact = async (contactId) => {\n        try {\n            const contactResponse = await axios.get(`/api/v1/contacts/${contactId}/?format=json`)\n            this.setState({\n                contact: contactResponse.data\n            })\n        }\n        catch (error) {\n            console.log(error)\n            this.setState({error: error.message})\n        }\n        console.log(this.componentDidMount)\n    }\n    render() {\n        return (\n            <div>\n                <header>\n                    \n                </header>\n    \n                <h2>Contact Detail</h2>\n                <h3>First Name:  { this.state.contact.firstname }</h3>\n                <h3>Last Name:  {this.state.contact.lastname}</h3>\n                <h3>Company:  {this.state.contact.company}</h3>\n                <h3>Phone:  {this.state.contact.phone}</h3>\n                <h3>email: {this.state.contact.email}</h3>\n                <h3>Message Subject: {this.state.contact.topic}</h3>\n                <h3>Message:  {this.state.contact.message}</h3>\n                {/* {this.state.contactlist.contact.body} */}\n              \n            </div>\n        );\n        }\n    }\n","import React, { Component } from 'react'\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div className=\"homewrapper\">\n                <div className=\"logowrapper\">\n                    <div className=\"logoinit\">\n                        <h1>CG</h1>\n                    </div>\n                    <div className=\"logofn\">\n                        <h4>Clayborn</h4>\n                    </div>\n                    <div className=\"logoln\">\n                        <h4>Guess</h4>\n                    </div>\n                </div>\n\n                <div className=\"homenav\">\n                    <nav><div><a href=\"/About_me\">About Me</a></div></nav>\n                    <nav><div><a href=\"/Blog\">Blog</a></div></nav>\n                    <nav><div><a href=\"/Contact\">Contact Me</a></div></nav>\n                    <nav><div><a href=\"/Projects\">Projects</a></div></nav>\n                </div>\n                <div className=\"brandStatement1\">\n                    <div className=\"quote1\">\n                        <p>“If you can't fly then run,\n                        if you can't run then walk,\n                        if you can't walk then crawl,\n                        but whatever you do you have to keep moving forward.”</p>\n                        <p>― Martin Luther King Jr.</p>\n\n                    </div>\n                </div>\n                <div className=\"icons\">\n                    <div><p>© Background image courtesy of Travis Clark</p></div>\n                    <div><p>Site created by Clayborn Guess using React, Django REST and PostgreSQL.</p></div>\n                    <div><p>claybornguess@yahoo.com</p></div>\n                    <div className=\"facebookIcon\">\n                        <img src=\"/facebook-icon.png\" width=\"35px\" alt=\"\"></img>\n                    </div>\n                    <div className=\"linkedinIcon\">\n                        <img src=\"/linkedin-icon.jpg\" width=\"35px\" alt=\"\"></img>\n                    </div>\n                    <div className=\"instagramIcon\">\n                        <img src=\"/instagram-icon.png\" width=\"35px\" alt=\"\"></img>\n                    </div>\n                    <div className=\"twitterIcon\">\n                        <img src=\"/twitter-icon.png\" width=\"35px\" alt=\"\"></img>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Projects extends Component {\n    render() {\n        return (\n            <div className=\"projectWrapper\">\n                <div className=\"logowrapper\">\n                    <div className=\"logoinit\">\n                        <h1>CG</h1>\n                    </div>\n                    <div className=\"logofn\">\n                        <h4>Clayborn</h4>\n                    </div>\n                    <div className=\"logoln\">\n                        <h4>Guess</h4>\n                    </div>\n                </div>\n                <div className=\"homenav\">\n                    <nav><div><a href=\"/\">Home</a></div></nav>\n                    <nav><div><a href=\"/About_me\">About Me</a></div></nav>\n                    <nav><div><a href=\"/Blog\">Blog</a></div></nav>\n                    <nav><div><a href=\"/Contact\">Contact Me</a></div></nav>\n                </div>\n                <div className=\"projectTitle\">\n                    <h1>Projects</h1>\n                </div>\n                <div className=\"projectImageWrapper\">\n                    <div className=\"projectImage1\">\n                        <img src=\"/jeopardy-image.jpg\" alt=\"pic\" width=\"250\" height=\"150\"></img>\n                    </div>\n                    <div className=\"projectImage2\">\n                        <img src=\"/Project2-Homepage.png\" alt=\"pic\" width=\"250\" height=\"150\"></img>\n                    </div>\n                    <div className=\"projectImage3\">\n                        <img src=\"/Clay's.png\" alt=\"pic\" width=\"250\" height=\"150\" ></img>\n                    </div>\n                    <div className=\"projectImage4\">\n                        <a href=\"https://project4c.herokuapp.com/\">\n                            <img src=\"/Project4_screenshot.png\" alt=\"pic\" width=\"250\" height=\"150\"></img>\n                        </a>\n                    </div>\n                </div>\n                <div className=\"icons\">\n                    <div><p>© Background image courtesy of Travis Clark</p></div>\n                    <div><p>Site created by Clayborn Guess using React, Django REST and PostgreSQL.</p></div>\n                    <div className=\"facebookIcon\">\n                        <img src=\"/facebook-icon.png\" width=\"35px\" alt=\"\"></img>\n                    </div>\n                    <div className=\"linkedinIcon\">\n                        <img src=\"/linkedin-icon.jpg\" width=\"35px\" alt=\"\"></img>\n                    </div>\n                    <div className=\"instagramIcon\">\n                        <img src=\"/instagram-icon.png\" width=\"35px\" alt=\"\"></img>\n                    </div>\n                    <div className=\"twitterIcon\">\n                        <img src=\"/twitter-icon.png\" width=\"35px\" alt=\"\"></img>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class About_me extends Component {\n    render() {\n        return (\n            <div className=\"aboutWrapper\">\n                 <div className=\"logowrapper\">\n                    <div className=\"logoinit\">\n                        <h1>CG</h1>\n                    </div>\n                    <div className=\"logofn\">\n                        <h4>Clayborn</h4>\n                    </div>\n                    <div className=\"logoln\">\n                        <h4>Guess</h4>\n                    </div>\n                </div>\n                <div className=\"aboutNav\">\n                        <nav><div><a href=\"/\">Home</a></div></nav>\n                        <nav><div><a href=\"/Blog\">Blog</a></div></nav>\n                        <nav><div><a href=\"/Contact\">Contact Me</a></div></nav>\n                        <nav><div><a href=\"/Projects\">Projects</a></div></nav>\n                    </div>\n\n            </div>\n        )\n    }\n}\n","import React, {Component} from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport BlogList from \"./components/BlogList\";\nimport Blog from \"./components/Blog\";\nimport CommentList from \"./components/CommentList\";\nimport Comment from \"./components/Comment\";\nimport ContactList from \"./components/ContactList\";\nimport Contact from  \"./components/Contact\";\nimport Home from \"./components/Home\";\nimport Projects from \"./components/Projects\"\nimport About_me from \"./components/About_me\"\nimport \"./App.css\";\n\n// document.querySelector('#blogPost').innerHTML = \"\"\n\nclass App extends Component {\n  render() {\n      return (\n          <Router>\n              <div className=\"App\">\n\n                  <div>\n                      \n                  </div>\n\n                  <Switch>\n                    \n                    <Route exact path=\"/\" component={ Home }/>\n\n                    <Route exact path=\"/blog\" component={ BlogList }/>\n\n                    <Route path=\"/blog/:id\" component={ Blog }/>\n\n                    <Route exact path=\"/contact\" component={ ContactList }/>\n\n                    <Route path=\"/contact/:id\" component={ Contact }/>\n\n                    <Route exact path=\"/comment\" component={ CommentList }/>\n\n                    <Route path=\"/comment/:id\" component={ Comment }/>\n\n                    <Route exact path=\"/projects\" component={ Projects }/>\n\n                    <Route exact path=\"/About_me\" component={ About_me }/>\n\n                  </Switch>\n              </div>\n          </Router>\n      )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}